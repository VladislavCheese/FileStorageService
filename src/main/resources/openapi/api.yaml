openapi: 3.0.3
info:
  title: File Storage Service
  version: 1.0.0
servers:
  - url: /
tags:
  - name: files
paths:
  /api/v1/files:
    post:
      tags: [files]
      summary: Upload file
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                filename:
                  type: string
                visibility:
                  $ref: '#/components/schemas/Visibility'
                tags:
                  type: array
                  items: { type: string }
              required: [file, visibility]
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string, description: "download link (id)" }
    get:
      tags: [files]
      summary: List files
      parameters:
        - name: X-User-Id
          in: header
          required: false
          schema: { type: string }
        - name: public
          in: query
          required: false
          schema: { type: boolean }
        - name: tag
          in: query
          schema: { type: string }
        - name: page
          in: query
          schema: { type: integer, minimum: 0, default: 0 }
        - name: size
          in: query
          schema: { type: integer, minimum: 1, default: 20 }
        - name: sort
          in: query
          schema: { type: string, default: "fileName,asc" }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/FileDto' }

  /api/v1/files/{id}:
    get:
      tags: [files]
      summary: Download by id
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK (binary)
          content:
            application/octet-stream: { schema: { type: string, format: binary } }
    delete:
      tags: [files]
      summary: Delete owned file
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema: { type: string }
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '204': { description: No Content }

  /api/v1/files/{id}/rename:
    patch:
      tags: [files]
      summary: Rename owned file
      parameters:
        - name: X-User-Id
          in: header
          required: true
          schema: { type: string }
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: { filename: { type: string } }
              required: [filename]
      responses:
        '204': { description: No Content }

components:
  schemas:
    Visibility:
      type: string
      enum: [PUBLIC, PRIVATE]
    FileDto:
      type: object
      properties:
        id: { type: string }
        userId: { type: string }
        fileName: { type: string }
        contentType: { type: string }
        size: { type: integer, format: int64 }
        uploadDate: { type: string, format: date-time }
        visibility: { $ref: '#/components/schemas/Visibility' }
        tags:
          type: array
          items: { type: string }